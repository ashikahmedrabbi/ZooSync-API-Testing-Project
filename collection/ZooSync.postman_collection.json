{
	"info": {
		"_postman_id": "2c81d1cb-24a5-4e29-9abe-00663ef038f4",
		"name": "ZooSync",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "35150579",
		"_collection_link": "https://test-team-1325.postman.co/workspace/cce1b171-5329-4907-b881-07de6463435f/collection/35150579-2c81d1cb-24a5-4e29-9abe-00663ef038f4?action=share&source=collection_link&creator=35150579"
	},
	"item": [
		{
			"name": "user",
			"item": [
				{
					"name": "create With Array",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let requestBody = JSON.parse(pm.request.body.raw);\r",
									"\r",
									"// Assuming you only have one user in the array\r",
									"let username3 = requestBody[0].username;\r",
									"\r",
									"pm.collectionVariables.set(\"USERNAME3\", username3);\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"ok\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n  {\r\n  \"username\": \"{{$randomUserName}}\",\r\n  \"firstName\": \"{{$randomFirstName}}\",\r\n  \"lastName\": \"{{$randomLastName}}\",\r\n  \"email\": \"{{$randomEmail}}\",\r\n  \"password\": \"1234\",\r\n  \"phone\": \"{{$randomPhoneNumber}}\",\r\n  \"userStatus\": 0\r\n  }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/createWithArray",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"createWithArray"
							]
						}
					},
					"response": []
				},
				{
					"name": "List of user object",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let requestBody = JSON.parse(pm.request.body.raw);\r",
									"\r",
									"// Assuming you only have one user in the array\r",
									"let username2 = requestBody[0].username;\r",
									"\r",
									"pm.collectionVariables.set(\"USERNAME2\", username2);\r",
									"\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"ok\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "  [\r\n    {\r\n  \r\n  \"username\": \"{{$randomUserName}}\",\r\n  \"firstName\": \"{{$randomFirstName}}\",\r\n  \"lastName\": \"{{$randomLastName}}\",\r\n  \"email\": \"{{$randomEmail}}\",\r\n  \"password\": \"1234\",\r\n  \"phone\": \"{{$randomPhoneNumber}}\",\r\n  \"userStatus\": 0\r\n  }\r\n  ]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/createWithList",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"createWithList"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// let requestBody = JSON.parse(request.data); // Gets the body you sent\r",
									"// let username = requestBody.username;\r",
									"\r",
									"// pm.environment.set(\"USERNAME\", username);\r",
									"\r",
									"// for golobal environment \r",
									"\r",
									"let requestBody = JSON.parse(pm.request.body.raw);\r",
									"let username = requestBody.username;\r",
									"\r",
									"pm.collectionVariables.set(\"USERNAME\", username);\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \r\n  \"username\": \"{{$randomUserName}}\",\r\n  \"firstName\": \"{{$randomFirstName}}\",\r\n  \"lastName\": \"{{$randomLastName}}\",\r\n  \"email\": \"{{$randomEmail}}\",\r\n  \"password\": \"1234\",\r\n  \"phone\": \"{{$randomPhoneNumber}}\",\r\n  \"userStatus\": 0\r\n  \r\n}\r\n\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": " {\r\n  \"username\": \"{{USERNAME}}\",\r\n  \"password\": \"1234\"\r\n }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "User Details Before Update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Username matches expected value\", function () {\r",
									"    let jsonData = pm.response.json();\r",
									"    let expectedUsername = pm.collectionVariables.get(\"USERNAME\");\r",
									"    pm.expect(jsonData.username).to.eql(expectedUsername);\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/{{USERNAME}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"{{USERNAME}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Updated User",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "\r\n{\r\n  \"username\": \"{{USERNAME}}\",\r\n  \"firstName\": \"{{$randomFirstName}}\",\r\n  \"lastName\": \"{{$randomLastName}}\",\r\n  \"email\": \"{{$randomEmail}}\",\r\n  \"password\": \"1234\",\r\n  \"phone\": \"{{$randomPhoneNumber}}\",\r\n  \"userStatus\": 0\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/{{USERNAME}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"{{USERNAME}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "User Details After Update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Username matches expected value\", function () {\r",
									"    let jsonData = pm.response.json();\r",
									"    let expectedUsername = pm.collectionVariables.get(\"USERNAME\");\r",
									"    pm.expect(jsonData.username).to.eql(expectedUsername);\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/{{USERNAME}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"{{USERNAME}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete User",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/{{USERNAME2}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"{{USERNAME2}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout User",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/logout",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"logout"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Store",
			"item": [
				{
					"name": "Returns Pets",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/store/inventory",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"store",
								"inventory"
							]
						}
					},
					"response": []
				},
				{
					"name": "Order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseBody = pm.response.json();\r",
									"const orderId=responseBody.id;\r",
									"pm.collectionVariables.set(\"orderId\", orderId);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \r\n  \"petId\": 101,\r\n  \"quantity\": 1,\r\n  \"shipDate\": \"2025-05-25T20:00:50.615Z\",\r\n  \"status\": \"placed\",\r\n  \"complete\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/store/order",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"store",
								"order"
							]
						}
					},
					"response": []
				},
				{
					"name": "Find Purchase",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \r\n  \"petId\": 101,\r\n  \"quantity\": 1,\r\n  \"shipDate\": \"2025-05-25T20:00:50.615Z\",\r\n  \"status\": \"placed\",\r\n  \"complete\": true\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/store/order/{{orderId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"store",
								"order",
								"{{orderId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Order",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \r\n  \"petId\": 101,\r\n  \"quantity\": 1,\r\n  \"shipDate\": \"2025-05-25T20:00:50.615Z\",\r\n  \"status\": \"placed\",\r\n  \"complete\": true\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/store/order/{{orderId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"store",
								"order",
								"{{orderId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Pets",
			"item": [
				{
					"name": "pet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"const response = pm.response.json();\r",
									"pm.collectionVariables.set(\"petId\", response.id);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 102,\r\n  \"category\": {\r\n    \"id\": 5,\r\n    \"name\": \"Cats\"\r\n  },\r\n  \"name\": \"Buddys\",\r\n  \"photoUrls\": [\r\n    \"https://example.com/photos/buddy1.jpg\",\r\n    \"https://example.com/photos/buddy2.jpg\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 12,\r\n      \"name\": \"friendly\"\r\n    },\r\n    {\r\n      \"id\": 13,\r\n      \"name\": \"vaccinated\"\r\n    }\r\n  ],\r\n  \"status\": \"sold\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/pet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update ;pet",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 101,\r\n  \"category\": {\r\n    \"id\": 5,\r\n    \"name\": \"Dogs\"\r\n  },\r\n  \"name\": \"Buddy\",\r\n  \"photoUrls\": [\r\n    \"https://example.com/photos/buddy1.jpg\",\r\n    \"https://example.com/photos/buddy2.jpg\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 12,\r\n      \"name\": \"friendly\"\r\n    },\r\n    {\r\n      \"id\": 13,\r\n      \"name\": \"vaccinated\"\r\n    }\r\n  ],\r\n  \"status\": \"sold\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/pet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet"
							]
						}
					},
					"response": []
				},
				{
					"name": "Pet find By Status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "status",
								"value": "sold",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/pet/findByStatus?status=sold",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								"findByStatus"
							],
							"query": [
								{
									"key": "status",
									"value": "sold"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Pet Find By Id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/pet/{{petId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								"{{petId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/pet/{{petId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								"{{petId}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://petstore.swagger.io/v2",
			"type": "string"
		},
		{
			"key": "USERNAME",
			"value": "Leta.Heller51"
		},
		{
			"key": "USERNAME2",
			"value": "Naomie.Hilpert"
		},
		{
			"key": "USERNAME3",
			"value": "Cielo50"
		},
		{
			"key": "petId",
			"value": 102
		},
		{
			"key": "orderId",
			"value": ""
		}
	]
}